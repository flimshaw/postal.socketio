/*
 postal.socketio
 Copyright (C) 2012 - Jim Cowart (http://freshbrewedcode.com/jimcowart)
 License: Dual licensed MIT & GPL v2.0
 Version 0.1.0
 */
(function(e,t){typeof module=="object"&&module.exports?module.exports=function(e,n,r){return t(e,n,r)}:typeof define=="function"&&define.amd?define(["underscore","socket.io","postal.federation"],function(n,r,i){return t(n,r,i,e)}):e.postal=t(e._,e.io,e.postal,e)})(this,function(e,t,n,r,i){var s="socketio",o={autoReciprocate:!0,enabled:!0},u=o,a=function(e,t,n){this.socket=e,this.instanceId=t,this.autoReciprocate=n};a.prototype.send=function(e){this.socket.emit("postal",n.fedx.transports[s].getWrapper("message",e))},a.prototype.reciprocate=function(){this.socket.emit("postal",n.fedx.transports[s].getWrapper("ready"))},a.prototype.attachToClient=function(e){e[s]||(e[s]=this,this.autoReciprocate&&this.reciprocate())};var f=n.fedx.transports[s]={listening:[],config:function(t){return t&&(u=e.defaults(t,o)),u},getTargets:function(){var n=[];return t.sockets&&t.sockets.sockets?e.each(t.sockets.sockets,function(e){e.namespace&&n.push(e.namespace)}):t.sockets&&e.each(t.sockets,function(t){t.namespaces&&e.each(t.namespaces,function(e){n.push(e)})}),n},updateListeners:function(t){t=t||this.getTargets(),e.each(t,function(t){if(!e.any(this.listening,function(e){return e.socket!==t})){var n={socket:t,callback:this.getOnEvent(t)};n.socket.on("postal",n.callback),this.listening.push(n)}},this)},getWrapper:function(e,t){switch(e){case"ready":return{postal:!0,type:"federation."+e,instanceId:n.instanceId};default:return{postal:!0,type:"federation."+e,instanceId:n.instanceId,envelope:t}}},onMessage:function(e,t){this.shouldProcess(t)&&(t.type==="federation.ready"?n.fedx.addClient(new a(e,t.instanceId,u.autoReciprocate),s):t.type==="federation.message"&&n.fedx.onFederatedMsg(t.envelope,t.instanceId))},getOnEvent:function(e){var t=this;return function(n){t.onMessage(e,n)}},shouldProcess:function(e){return u.enabled&&e.postal},signalReady:function(t){var n=t?e.isArray(t)?t:[t]:this.getTargets();this.updateListeners(n),e.each(n,function(e){e.emit("postal",this.getWrapper("ready"))},this)}};return t.sockets&&typeof t.sockets.on=="function"&&t.sockets.on("connection",function(e){f.updateListeners([e])}),n})