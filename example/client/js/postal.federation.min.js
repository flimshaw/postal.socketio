/*
 postal.federation
 Copyright (C) 2012 - Jim Cowart (http://freshbrewedcode.com/jimcowart)
 License: Dual licensed MIT & GPL v2.0
 Version 0.1.0
 */
(function(e,t){typeof module=="object"&&module.exports?module.exports=t(require("underscore"),require("postal")):typeof define=="function"&&define.amd?define(["underscore","postal"],function(n,r){return t(n,r,e)}):e.postal=t(e._,e.postal,e)})(this,function(e,t,n,r){t.utils.createUUID||(t.utils.createUUID=function(){var e=[],t="0123456789abcdef";for(var n=0;n<36;n++)e[n]=t.substr(Math.floor(Math.random()*16),1);return e[14]="4",e[19]=t.substr(e[19]&3|8,1),e[8]=e[13]=e[18]=e[23]="-",e.join("")});var i={enabled:!0,filterMode:"whitelist",filterDirection:"both"},s=i,o={},u={ping:function(){return{type:"federation.ping",instanceId:t.instanceId,timeStamp:new Date,ticket:t.utils.createUUID()}},pong:function(e){return{type:"federation.pong",instanceId:t.instanceId,timeStamp:new Date,pingData:{instanceId:e.instanceId,timeStamp:e.timeStamp,ticket:e.ticket}}},message:function(e){return{type:"federation.message",instanceId:t.instanceId,timeStamp:new Date,envelope:e}},bundle:function(e){return{type:"federation.bundle",instanceId:t.instanceId,timeStamp:new Date,packingSlips:e}}},a={ping:function(n){var r=n.target?e.isArray(n.target)?n.target:[n.target]:t.fedx.transports[n.transport].getTargets();e.each(r,function(e){var r=t.fedx.getPackingSlip("ping");o[r.ticket]={target:e},t.fedx.transports[n.transport].send(e,r)})},pong:function(e){t.fedx.transports[e.transport].send(e.source,t.fedx.getPackingSlip("pong",e.packingSlip))},bundle:function(e){t.fedx.transports[e.transport].send(e.target,t.fedx.getPackingSlip("bundle",e.slips))},message:function(n){n.envelope.originId=n.envelope.originId||t.instanceId;var r=n.target?e.isArray(n.target)?n.target:[n.target]:t.fedx.clients;e.each(r,function(r,i){r=r.send?r:t.fedx.clients[r];var s=e.clone(n.envelope);i!==s.lastSender&&(!s.knownIds||!s.knownIds.length||s.knownIds&&!e.include(s.knownIds,i))&&(s.knownIds=(s.knownIds||[]).concat(e.without(e.keys(t.fedx.clients),i)),r.send(t.fedx.getPackingSlip("message",s)))})}},f={"federation.ping":function(e){if(!t.fedx.clients[e.packingSlip.instanceId]||!t.fedx.clients[e.packingSlip.instanceId][e.transport]){var n=[t.fedx.getPackingSlip("pong",e.packingSlip),t.fedx.getPackingSlip("ping")];o[n[1].ticket]={target:e.source},a.bundle({transport:e.transport,target:e.source,slips:n})}else a.pong(e)},"federation.pong":function(e){o[e.packingSlip.pingData.ticket].target===e.source&&e.packingSlip.pingData.instanceId===t.instanceId&&(t.fedx.addClient(t.fedx.transports[e.transport].getClientInstance(e),e.transport),o[e.packingSlip.pingData.ticket]=r)},"federation.message":function(e){var n=e.packingSlip.envelope;l(n.channel,n.topic,"in")&&(n.lastSender=e.packingSlip.instanceId,t.publish(n))},"federation.bundle":function(n){e.each(n.packingSlip.packingSlips,function(r){t.fedx.onFederatedMsg(e.extend({},n,{packingSlip:r}))})}},l=function(n,r,i){var o=t.fedx.filters[i].hasOwnProperty(n),u=o&&e.any(t.fedx.filters[i][n],function(e){return t.configuration.resolver.compare(e,r)}),a=s.filterMode==="blacklist";return s.enabled&&(a&&(!o||o&&!u)||!a&&o&&u)},c=function(e){this.id=e,this.activeTransport=r};return c.prototype.send=function(e,t){this[t||this.activeTransport].send(e)},t.fedx=e.extend({FederationClient:c,clients:{},transports:{},filters:{"in":{},out:{}},addClient:function(e,n){var r=this.clients[e.instanceId]||(this.clients[e.instanceId]=new c(e.instanceId));r[n]||(r[n]=e),r.activeTransport=r.activeTransport||n,t.publish({channel:"postal.federation",topic:"client.federated",data:{remoteId:e.instanceId,localId:t.instanceId,autoReciprocated:!1,transport:n}})},addFilter:function(t){t=e.isArray(t)?t:[t],e.each(t,function(t){t.direction=t.direction||s.filterDirection,e.each(t.direction==="both"?["in","out"]:[t.direction],function(n){this.filters[n][t.channel]?e.include(this.filters[n][t.channel],t.topic)||this.filters[n][t.channel].push(t.topic):this.filters[n][t.channel]=[t.topic]},this)},this)},removeFilter:function(t){t=e.isArray(t)?t:[t],e.each(t,function(t){t.direction=t.direction||s.filterDirection,e.each(t.direction==="both"?["in","out"]:[t.direction],function(n){this.filters[n][t.channel]&&e.include(this.filters[n][t.channel],t.topic)&&(this.filters[n][t.channel]=e.without(this.filters[n][t.channel],t.topic))},this)},this)},canSendRemote:function(e,t){return l(e,t,"out")},configure:function(t){if(t&&t.filterMode&&t.filterMode!=="blacklist"&&t.mode!=="whitelist")throw new Error("postal.fedx filterMode must be 'blacklist' or 'whitelist'.");return t&&(s=e.defaults(t,i)),s},getPackingSlip:function(e,t){if(u.hasOwnProperty(e))return u[e].apply(this,Array.prototype.slice.call(arguments,1))},onFederatedMsg:function(e){if(!f.hasOwnProperty(e.packingSlip.type))throw new Error("postal.federation does not have a message handler for '"+e.packingSlip.type+"'.");f[e.packingSlip.type](e)},send:function(e,t){a.message({envelope:e,target:t})},signalReady:function(t,n){t=t||{},Object.prototype.toString.call(t)==="[object String]"?a.ping({transport:t,target:n}):e.each(this.transports,function(e,t){a.ping({transport:t,target:n})})}},t.fedx),t.addWireTap(function(e,n){t.fedx.canSendRemote(n.channel,n.topic)&&t.fedx.send(n)}),t})