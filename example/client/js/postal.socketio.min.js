/*
 postal.socketio
 Copyright (C) 2012 - Jim Cowart (http://freshbrewedcode.com/jimcowart)
 License: Dual licensed MIT & GPL v2.0
 Version 0.0.0
 */
(function(e,t){typeof module=="object"&&module.exports?module.exports=function(e,n,r){return t(e,n,r)}:typeof define=="function"&&define.amd?define(["underscore","socket.io","postal.federation"],function(n,r,i){return t(n,r,i,e)}):e.postal=t(e._,e.io,e.postal,e)})(this,function(e,t,n,r,i){var s="socketio",o={enabled:!0},u=o,a=function(e,t){this.socket=e,this.instanceId=t};a.prototype.send=function(e){f.send(this.socket,e)};var f=n.fedx.transports[s]={listening:[],config:function(t){return t&&(u=e.defaults(t,o)),u},getClientInstance:function(e){return new a(e.source,e.packingSlip.instanceId)},getTargets:function(){var n=[];return t.sockets&&t.sockets.sockets?e.each(t.sockets.sockets,function(e){e.namespace&&n.push(e.namespace)}):t.sockets&&e.each(t.sockets,function(t){t.namespaces&&e.each(t.namespaces,function(e){n.push(e)})}),n},updateListeners:function(t){t=t||this.getTargets(),e.each(t,function(t){if(!e.any(this.listening,function(e){return e.socket!==t})){var n={socket:t,callback:this.getOnEvent(t)};n.socket.on("postal",n.callback),this.listening.push(n)}},this)},onMessage:function(e,t){this.shouldProcess(t)&&n.fedx.onFederatedMsg({transport:s,packingSlip:t,source:e})},getOnEvent:function(e){var t=this;return function(n){t.onMessage(e,n)}},send:function(e,t){e.emit("postal",t)},shouldProcess:function(e){return u.enabled}};return t.sockets&&typeof t.sockets.on=="function"&&t.sockets.on("connection",function(e){f.updateListeners([e])}),n})